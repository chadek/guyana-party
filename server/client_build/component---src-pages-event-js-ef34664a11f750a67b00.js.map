{"version":3,"sources":["webpack:///./src/components/EventPage.js","webpack:///./src/pages/event.js","webpack:///./src/components/Dashboard/SingleMap.js"],"names":["Wrapper","styled","div","props","theme","borderColor","sm","EventPage","slug","useState","description","setDescription","diagOpen","setDiagOpen","admin","setAdmin","occurrence","setOccurrence","occurrenceStr","setOccurrenceStr","showDays","setShowDays","useEvent","loading","event","useEffect","allowedEvent","toast","navigate","a","markToSafeHTML","replace","isAdmin","group","community","JSON","parse","str","count","days","forEach","label","value","SingleMap","coords","location","coordinates","viewOffset","zoom","title","name","className","id","to","address","condition","status","isPrivate","Fab","aria-label","onClick","_id","size","color","Dialog","action","archiveEvent","error","console","log","close","isOpen","text","dangerouslySetInnerHTML","__html","formatStart","startDate","formatPlage","photos","length","PhotoList","Forbidden","path","locate","map","setMap","initSingleMarker","newMap","Map","initSingle"],"mappings":"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","file":"component---src-pages-event-js-ef34664a11f750a67b00.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { navigate } from 'gatsby'\nimport styled from 'styled-components'\nimport Fab from '@material-ui/core/Fab'\nimport EditIcon from '@material-ui/icons/Edit'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Dialog from './Dialog'\nimport { If, Page, Link, Seo } from './addons'\nimport { useEvent, archiveEvent, allowedEvent } from '../lib/services/eventService'\nimport { isAdmin } from '../lib/services/communityService'\nimport SingleMap from './Dashboard/SingleMap'\nimport { markToSafeHTML, toast } from '../lib/utils'\nimport { formatStart, formatPlage, days } from '../lib/date'\nimport PhotoList from './PhotoList'\n\nconst Wrapper = styled.div`\n  #map,\n  #mobileMap {\n    height: 250px;\n  }\n  #mobileMap {\n    display: none;\n  }\n  #title {\n    position: absolute;\n    margin-top: -225px;\n    max-width: 500px;\n    background-color: rgb(250, 250, 250);\n    padding: 0.5rem 0.5rem 0;\n    z-index: 999;\n    border: 1px solid ${props => props.theme.borderColor};\n    h1 {\n      text-align: inherit;\n      margin-bottom: 0;\n      span {\n        font-size: 1.1rem;\n      }\n      a {\n        color: #0078e7;\n        font-size: 25px;\n      }\n    }\n    p.addr {\n      margin: 1rem 0;\n    }\n    p.status {\n      margin-bottom: 0.5rem;\n    }\n    .controls {\n      position: absolute;\n      bottom: 0;\n      right: 0;\n      margin-top: 0.5rem;\n      text-align: center;\n      button {\n        margin: 10px;\n      }\n    }\n  }\n  #content {\n    margin-top: 0.5rem;\n    grid-template-columns: 60% auto;\n    grid-gap: 0.5rem;\n    .desc-content {\n      background-color: #fff;\n      padding: 1rem 0.5rem;\n    }\n    .info {\n      margin-left: 1rem;\n      .info-date {\n        margin: 0.8rem 0;\n      }\n      .address {\n        margin-top: 0.8rem;\n      }\n    }\n  }\n  #photos {\n    margin-top: 2rem;\n    .photos .slick-track {\n      margin-left: 0;\n      img {\n        padding: 5px;\n      }\n    }\n  }\n  @media (max-width: ${props => props.theme.sm}) {\n    #map {\n      display: none;\n    }\n    #mobileMap {\n      display: block;\n    }\n    #title {\n      position: relative;\n      margin-top: inherit;\n      max-width: inherit;\n    }\n    #content {\n      grid-template-columns: auto;\n      .info {\n        grid-row: 1;\n      }\n    }\n  }\n`\n\nfunction EventPage({ slug }) {\n  const [description, setDescription] = useState(null)\n  const [diagOpen, setDiagOpen] = useState(false)\n  const [admin, setAdmin] = useState(false)\n  const [occurrence, setOccurrence] = useState({})\n  const [occurrenceStr, setOccurrenceStr] = useState('')\n  const [showDays, setShowDays] = useState(false)\n\n  const { loading, event } = useEvent({ slug })\n\n  useEffect(() => {\n    if ((!loading && !event) || (event && !allowedEvent(event))) {\n      toast(`L'évènement à l'adresse \"${slug}\" est introuvable`, 'error')\n      navigate('/')\n    }\n  }, [event, loading, slug])\n\n  useEffect(() => {\n    ;(async () => {\n      if (event) setDescription(await markToSafeHTML(event.description.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>')))\n    })()\n  }, [event])\n\n  useEffect(() => {\n    if (event) {\n      setAdmin(isAdmin(event.group.community))\n      setOccurrence(JSON.parse(event.occurrence))\n    }\n  }, [event])\n\n  useEffect(() => {\n    let str = ''\n    let count = 0\n    days.forEach(({ label, value }) => {\n      if (occurrence[value]) {\n        if (count === 0) setShowDays(true)\n        str += (count > 0 ? ', ' : '') + label\n        count += 1\n      }\n    })\n    setOccurrenceStr(str)\n  }, [occurrence])\n\n  const archive = () => {\n    if (!isAdmin(event.group.community)) {\n      return toast('Vous ne pouvez pas archiver cet évènement', 'error')\n    }\n    const next = () => {\n      toast('Évènement archivé avec succès', 'success')\n      navigate('/app')\n    }\n    const fallback = error => {\n      toast('Une erreur est survenue', 'error')\n      console.log(error)\n    }\n    archiveEvent(event._id, next, fallback)\n  }\n\n  return (\n    <Wrapper>\n      {!loading && <SingleMap coords={event && event.location.coordinates} viewOffset={0.006} zoom={16} />}\n      <Page loading={loading && !event}>\n        {event && (\n          <>\n            <Seo title={event.name} />\n            <section className=\"grid\" id=\"title\">\n              <h1>\n                {event.name}{' '}\n                {event.group && (\n                  <p>\n                    <span>par</span>&nbsp;\n                    <Link title=\"Voir le group\" to={`/group/${event.group.slug}`}>\n                      {event.group.name}\n                    </Link>\n                  </p>\n                )}\n              </h1>\n              <p className=\"addr text-wrap\">{event.location.address}</p>\n              <If condition={admin}>\n                <p className=\"status bold\">\n                  {event.status === 'archived' && <span className=\"red\">Archivé</span>}\n                  {event.status === 'waiting' && <span className=\"red\">Hors ligne</span>}\n                  {event.status === 'online' && <span className=\"green\">En ligne</span>}\n                  {event.isPrivate && ' | Évènement privé'}\n                </p>\n                <div className=\"controls\">\n                  <Fab\n                    aria-label=\"Modifier\"\n                    className=\"edit\"\n                    onClick={() => navigate(`/app/event/edit/${event._id}`)}\n                    size=\"small\"\n                    title=\"Modifier\"\n                  >\n                    <EditIcon />\n                  </Fab>\n                  <Fab\n                    aria-label=\"Archiver\"\n                    className=\"archive\"\n                    color=\"secondary\"\n                    onClick={() => setDiagOpen(true)}\n                    size=\"small\"\n                    title=\"Archiver\"\n                  >\n                    <DeleteIcon />\n                  </Fab>\n                </div>\n                <Dialog\n                  action={archive}\n                  close={() => setDiagOpen(false)}\n                  isOpen={diagOpen}\n                  text=\"Cet évènement ne sera pas supprimé.\"\n                  title=\"Voulez-vous vraiment archiver cet évènement ?\"\n                />\n              </If>\n            </section>\n            <section className=\"grid\" id=\"content\">\n              <div\n                className=\"desc-content\"\n                dangerouslySetInnerHTML={{ __html: description }} // eslint-disable-line react/no-danger\n              />\n              <div className=\"info\">\n                <div className=\"info-date\">\n                  <p>\n                    <strong>{formatStart(event.startDate)}</strong>\n                  </p>\n                  <p>{formatPlage(event, true)}</p>\n                </div>\n                {showDays && (\n                  <p>\n                    Répétition de l&rsquo;évènement : <br />\n                    Tous les <em>{occurrenceStr}</em>\n                  </p>\n                )}\n                <p className=\"address\">\n                  Adresse :<br />\n                  {event.location.address}\n                </p>\n              </div>\n            </section>\n            <SingleMap coords={event && event.location.coordinates} id=\"mobileMap\" zoom={16} />\n            <section id=\"photos\">\n              <p>{`${event.photos && event.photos.length ? `Photos (${event.photos.length}) :` : ''}`}</p>\n              <PhotoList className=\"photos\" photos={event.photos} />\n            </section>\n          </>\n        )}\n      </Page>\n    </Wrapper>\n  )\n}\n\nEventPage.propTypes = { slug: PropTypes.string }\n\nexport default EventPage\n","import React, { useEffect } from 'react'\nimport { navigate } from 'gatsby'\nimport { Router } from '@reach/router'\nimport EventPage from '../components/EventPage'\n\nconst Forbidden = () => {\n  useEffect(() => navigate('/'), [])\n  return null\n}\n\nconst event = () => (\n  <Router>\n    <Forbidden path=\"/event/*\" />\n    <EventPage path=\"/event/:slug\" />\n  </Router>\n)\n\nexport default event\n","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport Map from '../Map'\n\nconst SingleMap = ({ id = 'map', onClick, coords, locate, viewOffset, zoom }) => {\n  const [map, setMap] = useState(null)\n\n  useEffect(() => {\n    if (!map) {\n      const newMap = new Map(locate, id)\n      newMap.initSingle(onClick)\n      setMap(newMap)\n    } else {\n      map.initSingleMarker(coords, viewOffset, zoom)\n    }\n  }, [coords, id, locate, map, onClick, viewOffset, zoom])\n\n  return <div id={id} />\n}\n\nSingleMap.propTypes = {\n  id: PropTypes.string,\n  onClick: PropTypes.func,\n  coords: PropTypes.array,\n  locate: PropTypes.bool,\n  viewOffset: PropTypes.number,\n  zoom: PropTypes.number\n}\n\nexport default SingleMap\n"],"sourceRoot":""}