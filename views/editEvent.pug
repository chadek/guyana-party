extends layout

include mixins/_customMapStyle
include mixins/_customMdeStyle
include mixins/_customMapScript
include mixins/_customMdeScript
include mixins/_switchPublishEvent

block customStyle
  +customMapStyle()
  +customMdeStyle()
  link(rel="stylesheet", href="/vendor/jquery/clockpicker/jquery.clockpicker.min.css")

block content
  //- pre #{h.dump(event)}
  .pure-g
    unless event
      .banner
        h1.banner__head= title
    .pure-u-1.content
      if event
        //- Flyer
        .pure-u-1.photo-orga-event
          img(src=(event.photo ? `/uploads/${event.photo}` : "/images/default.jpg") alt="Flyer de l'évènement")
        .separator.top-space
      form.pure-u-1(action=`/events/add${event?`/${event._id}`:""}?_csrf=${csrfToken}` method="POST" enctype="multipart/form-data")
        - const savedData = h.store.get("editevents-form-data")
        - const errorData = h.store.get("form-errors")
        - h.store.remove("form-errors")
        .pure-u-1
          //- publishing checkbox
          if event
            .pure-u-1.text-center.top-space
              +switchPublishEvent(event)
              br
              //- Edit & Archive buttons
              a(href=`/event/${event.slug}?remove=true` title="Archiver")
                span.icon!= h.icon("archive")
          //- Name
          .pure-u-1.top-space-40
            span.pure-u-2-24.icon!= h.icon("clipboard-pencil")
            input.pure-u-22-24(autocomplete="off" type="text" placeholder="Nom de l'évènement" name="name" value=`${savedData?savedData.name:(event ? event.name : "")}` class=`${errorData && errorData.includes("name")?"error":""}` required)
          //- Flyer de l'évènement
          .pure-u-1.top-space-40.text-center
            label.pure-button.pure-button-primary(for="fileUpload") Flyer de l'évènement
            input.show-for-sr#fileUpload(type="file" name="photo" accept="image/gif, image/png, image/jpeg")
            .file-upload-filename
          //- Organism author of the event
          .pure-u-1.top-space-40
            .u-md-3-8
              label: strong Organisme créateur de l'évènement&nbsp;:
            .u-md-5-8
              select#orga-select(name="organism")
              input#orga-id(type="hidden" value=`${event ? event.organism.id : orga}`)
          //- Timezone
          .pure-u-1.top-space-40: label
            | Fuseau horaire&nbsp;:&nbsp;
            select#tz-select(name="tz")
              each tz in tzList
                option(value=tz.value selected=(event ? tz.label == event.timezone : tz.selected))= tz.label
          
          
          
          //- Date && Time
          .pure-u-1.l-wrap.top-space-40
            //- Récurrence de l'évènement
            //- tester si création
              //- choisir si récurrence ou pas
            //- tester si modification
              //- vérifier si l'évènment a des occurences 

            //- Modification d'un évènement
            if (event)
              //- Tester occurring.day
              if !(event.occurring.day === undefined || event.occurring.day.length == 0)
                - const mondayChecked = savedData ? savedData.occurring.day.includes("monday") : (event ? event.occurring.day.includes("monday") : false)
                - const thuesdayChecked = savedData ? savedData.occurring.day.includes("thuesday") : (event ? event.occurring.day.includes("thuesday") : false)
                - const wednesdayChecked = savedData ? savedData.occurring.day.includes("wednesday") : (event ? event.occurring.day.includes("wednesday") : false)
                - const thursdayChecked = savedData ? savedData.occurring.day.includes("thursday") : (event ? event.occurring.day.includes("thursday") : false)
                - const fridayChecked = savedData ? savedData.occurring.day.includes("friday") : (event ? event.occurring.day.includes("friday") : false)
                - const saturdayChecked = savedData ? savedData.occurring.day.includes("saturday") : (event ? event.occurring.day.includes("saturday") : false)
                - const sundayChecked = savedData ? savedData.occurring.day.includes("sunday") : (event ? event.occurring.day.includes("sunday") : false)
                .top-space
                  .pure-u-1
                    label.pure-u-1= `Répétition de l'évènement :`
                      input(type="checkbox" id="isrec" name="isrec")
                    ul.ul-daysdisabled#checkday
                    if mondayChecked
                      li.li-daydisabled
                        input(type="checkbox" id="monday" name="occurring[day][]" value="monday" checked)
                        label(for="monday") Lundi &nbsp;
                    else
                      li.li-daydisabled
                        input(type="checkbox" id="monday" name="occurring[day][]" value="monday")
                        label(for="monday") Lundi &nbsp;

                    if thuesdayChecked
                      li.li-daydisabled
                        input(type="checkbox" id="thuesday" name="occurring[day][]" value="thuesday" checked)  
                        label(for="thuesday") Mardi &nbsp;
                    else
                      li.li-daydisabled
                        input(type="checkbox" id="thuesday" name="occurring[day][]" value="thuesday")
                        label(for="thuesday") Mardi &nbsp;

                    if wednesdayChecked
                      li.li-daydisabled
                        input(type="checkbox" id="wednesday" name="occurring[day][]" value="wednesday" checked)
                        label(for="wednesday") Mercredi &nbsp;
                    else
                      li.li-daydisabled
                        input(type="checkbox" id="wednesday" name="occurring[day][]" value="wednesday")
                        label(for="wednesday") Mercredi &nbsp;

                    if thursdayChecked
                      li.li-daydisabled
                        input(type="checkbox" id="thursday" name="occurring[day][]" value="thursday" checked)
                        label(for="thursday") Jeudi &nbsp;
                    else
                      li.li-daydisabled
                        input(type="checkbox" id="thursday" name="occurring[day][]" value="thursday")
                        label(for="thursday") Jeudi &nbsp;

                    if fridayChecked
                      li.li-daydisabled
                        input(type="checkbox" id="friday" name="occurring[day][]" value="friday" checked)
                        label(for="friday") Vendredi &nbsp;
                    else
                      li.li-daydisabled
                        input(type="checkbox" id="friday" name="occurring[day][]" value="friday")
                        label(for="friday") Vendredi &nbsp;
                    
                    if saturdayChecked
                      li.li-daydisabled
                        input(type="checkbox" id="saturday" name="occurring[day][]" value="saturday" checked)
                        label(for="saturday") Samedi &nbsp;
                    else
                      li.li-daydisabled
                        input(type="checkbox" id="saturday" name="occurring[day][]" value="saturday")
                        label(for="saturday") Samedi &nbsp;
                    
                    if sundayChecked
                      li.li-daydisabled
                        input(type="checkbox" id="sunday" name="occurring[day][]" value="sunday" checked)
                        label(for="sunday") Dimanche &nbsp;
                    else
                      li.li-daydisabled
                        input(type="checkbox" id="sunday" name="occurring[day][]" value="sunday")
                        label(for="sunday") Dimanche &nbsp;
            else
              //- Création d'un évènement, juste une liste des checkboxs
              .pure-u-1
                label.pure-u-1= `Répétition de l'évènement :`
                  input(type="checkbox" id="isrec" name="isrec")
                ul.ul-daysdisabled#checkday(class="hidden")
                  li.li-daydisabled
                    input(type="checkbox" id="monday" name="occurring[day][]" value="monday")
                    label(for="monday") Lundi &nbsp;
                  li.li-daydisabled
                    input(type="checkbox" id="thuesday" name="occurring[day][]" value="thuesday")
                    label(for="thuesday") Mardi &nbsp;
                  li.li-daydisabled
                    input(type="checkbox" id="wednesday" name="occurring[day][]" value="wednesday")
                    label(for="wednesday") Mercredi &nbsp;
                  li.li-daydisabled
                    input(type="checkbox" id="thursday" name="occurring[day][]" value="thursday")
                    label(for="thursday") Jeudi &nbsp;
                  li.li-daydisabled
                    input(type="checkbox" id="friday" name="occurring[day][]" value="friday")
                    label(for="friday") Vendredi &nbsp;
                  li.li-daydisabled
                    input(type="checkbox" id="saturday" name="occurring[day][]" value="saturday")
                    label(for="saturday") Samedi &nbsp;
                  li.li-daydisabled
                    input(type="checkbox" id="sunday" name="occurring[day][]" value="sunday")
                    label(for="sunday") Dimanche &nbsp;


            


            //- .pure-u-1.top-space: label Répétition de l'évènement &nbsp;:
            //-   if ( event )
            //-     input(type="checkbox" id="isrec" name="isrec" checked)
            //-   else
            //-     input(type="checkbox" id="isrec" name="isrec")
              
            //- .top-space
            //-   if !(event.occurring.day === undefined || event.occurring.day.length == 0)
            //-     .pure-u-1#checkday(class="")
            //-       - const mondayChecked = savedData ? savedData.occurring.day.includes("monday") : (event ? event.occurring.day.includes("monday") : false)
            //-       - const thuesdayChecked = savedData ? savedData.occurring.day.includes("thuesday") : (event ? event.occurring.day.includes("thuesday") : false)
            //-       - const wednesdayChecked = savedData ? savedData.occurring.day.includes("wednesday") : (event ? event.occurring.day.includes("wednesday") : false)
            //-       - const thursdayChecked = savedData ? savedData.occurring.day.includes("thursday") : (event ? event.occurring.day.includes("thursday") : false)
            //-       - const fridayChecked = savedData ? savedData.occurring.day.includes("friday") : (event ? event.occurring.day.includes("friday") : false)
            //-       - const saturdayChecked = savedData ? savedData.occurring.day.includes("saturday") : (event ? event.occurring.day.includes("saturday") : false)
            //-       - const sundayChecked = savedData ? savedData.occurring.day.includes("sunday") : (event ? event.occurring.day.includes("sunday") : false)

            //-       if mondayChecked
            //-         input(type="checkbox" id="monday" name="occurring[day][]" value="monday" checked)
            //-         label(for="monday") Lundi &nbsp;
            //-       else
            //-         input(type="checkbox" id="monday" name="occurring[day][]" value="monday")
            //-         label(for="monday") Lundi &nbsp;

            //-       if thuesdayChecked
            //-         input(type="checkbox" id="thuesday" name="occurring[day][]" value="thuesday" checked)  
            //-         label(for="thuesday") Mardi &nbsp;
            //-       else
            //-         input(type="checkbox" id="thuesday" name="occurring[day][]" value="thuesday")
            //-         label(for="thuesday") Mardi &nbsp;

            //-       if wednesdayChecked
            //-         input(type="checkbox" id="wednesday" name="occurring[day][]" value="wednesday" checked)
            //-         label(for="wednesday") Mercredi &nbsp;
            //-       else
            //-         input(type="checkbox" id="wednesday" name="occurring[day][]" value="wednesday")
            //-         label(for="wednesday") Mercredi &nbsp;

            //-       if thursdayChecked
            //-         input(type="checkbox" id="thursday" name="occurring[day][]" value="thursday" checked)
            //-         label(for="thursday") Jeudi &nbsp;
            //-       else
            //-         input(type="checkbox" id="thursday" name="occurring[day][]" value="thursday")
            //-         label(for="thursday") Jeudi &nbsp;

            //-       if fridayChecked
            //-         input(type="checkbox" id="friday" name="occurring[day][]" value="friday" checked)
            //-         label(for="friday") Vendredi &nbsp;
            //-       else
            //-         input(type="checkbox" id="friday" name="occurring[day][]" value="friday")
            //-         label(for="friday") Vendredi &nbsp;
                  
            //-       if saturdayChecked
            //-         input(type="checkbox" id="saturday" name="occurring[day][]" value="saturday" checked)
            //-         label(for="saturday") Samedi &nbsp;
            //-       else
            //-         input(type="checkbox" id="saturday" name="occurring[day][]" value="saturday")
            //-         label(for="saturday") Samedi &nbsp;
                  
            //-       if sundayChecked
            //-         input(type="checkbox" id="sunday" name="occurring[day][]" value="sunday" checked)
            //-         label(for="sunday") Dimanche &nbsp;
            //-       else
            //-         input(type="checkbox" id="sunday" name="occurring[day][]" value="sunday")
            //-         label(for="sunday") Dimanche &nbsp;
            //-   else
            //-     .pure-u-1#checkday(class="hidden")
              

                
                

            .top-space  
            //- Start date && time
            //- affichage actuel :
            //- date de début          heure de début 
            //- date de fin            heure de fin 
            //- problème rencontré :  gestion des évènements récurrents 
            .pure-u-1: label Début :
            .pure-u-1.top-space
              .u-sm-5-12.l-content
                span.pure-u-1-8.icon!= h.icon("calendar")
                input.pure-u-7-8#dp1(type="date" name="startdate")
              .u-sm-5-12.l-content
                .clockpicker#horloge1(data-placement="bottom" data-align="top" data-autoclose="true")
                  span.pure-u-1-8.icon!= h.icon("clock")
                  input.pure-u-7-8#starttime(type="text" name="starttime")
                  input#start(type="hidden" name="start" value=`${savedData?savedData.start:(event?event.start:"")}`)
            //- End date && time
            .pure-u-1.top-space: label Fin :
            .pure-u-1.top-space
              .u-sm-5-12.l-content
                span.pure-u-1-8.icon!= h.icon("calendar")
                input.pure-u-7-8#dp2(type="date" name="enddate")
              .u-sm-5-12.l-content
                .clockpicker#horloge2(data-placement="bottom" data-align="top" data-autoclose="true")
                  span.pure-u-1-8.icon!= h.icon("clock")
                  input.pure-u-7-8#endtime(type="text" name="endtime")
                  input#end(type="hidden" name="end" value=`${savedData?savedData.end:(event?event.end:"")}`)

              

          //- Description
          .pure-u-1.top-space-40
            label Description :
          .pure-u-1.top-space
            textarea#md(autocomplete="off" name="description" value=`${savedData?savedData.description:(event ? event.description : "")}` class=`${errorData && errorData.includes("description")?"error":""}` placeholder="Un petit wiki pour décrire proprement l'évènement") #{savedData?savedData.description:(event ? event.description : "")}
          //- Event location
          .pure-u-1.top-space-40
            label Sélectionnez le lieu de l'évènement sur la carte :
            #map.single.top-space
            span.input-group-label: i.fi-marker.size-36
            input.input-group-field#address(type="text" placeholder="Sélectionnez le lieu de l'évènement sur la carte..." name="location[address]" value=`${savedData?savedData.location.address:(event ? event.location.address : "")}` class=`${errorData && errorData.includes("location.address")?"error":""}` readonly)
            input#longitude(type="hidden" name="location[coordinates][0]" value=`${savedData?savedData.location.coordinates[0]:(event ? event.location.coordinates[0] : "")}`)
            input#latitude(type="hidden" name="location[coordinates][1]" value=`${savedData?savedData.location.coordinates[1]:(event ? event.location.coordinates[1] : "")}`)
          //- Validation button
          .pure-u-1.top-space-40
            input.pure-button.success.button.expanded(type="submit" value=`${event ? "Valider" : "Créer"}`)
            //-if event
            //-  input#id(type="hidden" value=event._id)

block customScripts
  script(src="/vendor/jquery/jquery.min.js")
  script(src="/vendor/jquery/clockpicker/jquery.clockpicker.min.js")
  +customMapScript()
  +customMdeScript()
  script(type="text/javascript").
    $(document).ready(function() {
      $(".clockpicker").clockpicker();
    });
